// <auto-generated />
using System;
using HRM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRM.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240721153209_HRM-Adding-Identity-Data")]
    partial class HRMAddingIdentityData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HRM.Models.Benefits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BenefitsDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeBenefits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Benefits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BenefitsDescription = "Covers medical expenses",
                            BenefitsName = "Health Insurance",
                            EndAt = new DateTime(2025, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(4987),
                            StartAt = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(4976),
                            TypeBenefits = "Medical"
                        },
                        new
                        {
                            Id = 2,
                            BenefitsDescription = "Access to gym facilities",
                            BenefitsName = "Gym Membership",
                            EndAt = new DateTime(2025, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(4995),
                            StartAt = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(4995),
                            TypeBenefits = "Wellness"
                        },
                        new
                        {
                            Id = 3,
                            BenefitsDescription = "Vacation and sick leave",
                            BenefitsName = "Paid Time Off",
                            EndAt = new DateTime(2025, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(4997),
                            StartAt = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(4997),
                            TypeBenefits = "Leave"
                        });
                });

            modelBuilder.Entity("HRM.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "Human Resources",
                            Description = "Handles HR tasks"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "Development",
                            Description = "Handles software development tasks"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentName = "Sales",
                            Description = "Handles sales and customer relations"
                        });
                });

            modelBuilder.Entity("HRM.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            DepartmentId = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            FullName = "John A. Doe",
                            HireDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5340),
                            LastName = "Doe",
                            MiddleName = "A.",
                            PositionId = 1,
                            ShiftId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            DepartmentId = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            FullName = "Jane B. Smith",
                            HireDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5343),
                            LastName = "Smith",
                            MiddleName = "B.",
                            PositionId = 2,
                            ShiftId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St",
                            DepartmentId = 3,
                            Email = "bob.brown@example.com",
                            FirstName = "Bob",
                            FullName = "Bob C. Brown",
                            HireDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5346),
                            LastName = "Brown",
                            MiddleName = "C.",
                            PositionId = 3,
                            ShiftId = 3
                        });
                });

            modelBuilder.Entity("HRM.Models.Performance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TraningId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SalaryId");

                    b.HasIndex("TraningId");

                    b.ToTable("Performance");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Good performance",
                            EmployeeId = 1,
                            EvaluationDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5542),
                            SalaryId = 1,
                            Score = 85,
                            TraningId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Excellent performance",
                            EmployeeId = 2,
                            EvaluationDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5544),
                            SalaryId = 2,
                            Score = 90,
                            TraningId = 1
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Satisfactory performance",
                            EmployeeId = 3,
                            EvaluationDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5546),
                            SalaryId = 3,
                            Score = 80,
                            TraningId = 2
                        });
                });

            modelBuilder.Entity("HRM.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BenefitsId")
                        .HasColumnType("int");

                    b.Property<string>("PositonDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BenefitsId");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BenefitsId = 1,
                            PositonDescription = "Manages HR tasks",
                            PositonName = "HR Manager"
                        },
                        new
                        {
                            Id = 2,
                            BenefitsId = 2,
                            PositonDescription = "Develops software",
                            PositonName = "Developer"
                        },
                        new
                        {
                            Id = 3,
                            BenefitsId = 3,
                            PositonDescription = "Handles sales and customer relations",
                            PositonName = "Sales Executive"
                        });
                });

            modelBuilder.Entity("HRM.Models.Recruitment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecruitmentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requestment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Recruitment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deadline = new DateTime(2024, 8, 20, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5454),
                            DepartmentId = 2,
                            Position = "Developer",
                            PostingDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5453),
                            RecruitmentDescription = "Looking for a skilled developer",
                            Requestment = "[]",
                            Status = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Deadline = new DateTime(2024, 8, 20, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5458),
                            DepartmentId = 3,
                            Position = "Sales Executive",
                            PostingDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5458),
                            RecruitmentDescription = "Looking for a skilled sales executive",
                            Requestment = "[]",
                            Status = "Open"
                        });
                });

            modelBuilder.Entity("HRM.Models.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("BasicSalary")
                        .HasColumnType("real");

                    b.Property<float>("Bonus")
                        .HasColumnType("real");

                    b.Property<float>("Deductions")
                        .HasColumnType("real");

                    b.Property<float>("NetSalary")
                        .HasColumnType("real");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Salary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasicSalary = 60000f,
                            Bonus = 5000f,
                            Deductions = 2000f,
                            NetSalary = 63000f,
                            PaymentDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5480)
                        },
                        new
                        {
                            Id = 2,
                            BasicSalary = 80000f,
                            Bonus = 10000f,
                            Deductions = 3000f,
                            NetSalary = 87000f,
                            PaymentDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5482)
                        },
                        new
                        {
                            Id = 3,
                            BasicSalary = 70000f,
                            Bonus = 7000f,
                            Deductions = 2500f,
                            NetSalary = 74500f,
                            PaymentDate = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5483)
                        });
                });

            modelBuilder.Entity("HRM.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DayOfApplication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("TotalHouse")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Shift");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfApplication = "[]",
                            EndAt = new DateTime(2024, 7, 22, 2, 32, 9, 295, DateTimeKind.Local).AddTicks(5416),
                            StartAt = new DateTime(2024, 7, 21, 18, 32, 9, 295, DateTimeKind.Local).AddTicks(5398),
                            TotalHouse = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            DayOfApplication = "[]",
                            EndAt = new DateTime(2024, 7, 22, 1, 32, 9, 295, DateTimeKind.Local).AddTicks(5432),
                            StartAt = new DateTime(2024, 7, 21, 17, 32, 9, 295, DateTimeKind.Local).AddTicks(5431),
                            TotalHouse = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            DayOfApplication = "[]",
                            EndAt = new DateTime(2024, 7, 22, 0, 32, 9, 295, DateTimeKind.Local).AddTicks(5434),
                            StartAt = new DateTime(2024, 7, 21, 16, 32, 9, 295, DateTimeKind.Local).AddTicks(5433),
                            TotalHouse = new TimeOnly(8, 0, 0)
                        });
                });

            modelBuilder.Entity("HRM.Models.Traning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeTrain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Traning");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndAt = new DateTime(2024, 8, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5515),
                            StartAt = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5514),
                            Status = "Ongoing",
                            TrainDescription = "Training for software development",
                            TrainName = "Software Development",
                            TypeTrain = "[]"
                        },
                        new
                        {
                            Id = 2,
                            EndAt = new DateTime(2024, 8, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5517),
                            StartAt = new DateTime(2024, 7, 21, 22, 32, 9, 295, DateTimeKind.Local).AddTicks(5517),
                            Status = "Ongoing",
                            TrainDescription = "Training for sales skills",
                            TrainName = "Sales Skills",
                            TypeTrain = "[]"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("HRM.Models.Employee", b =>
                {
                    b.HasOne("HRM.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRM.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRM.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("HRM.Models.Performance", b =>
                {
                    b.HasOne("HRM.Models.Employee", "Employee")
                        .WithMany("Performances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRM.Models.Salary", "Salary")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRM.Models.Traning", "Traning")
                        .WithMany()
                        .HasForeignKey("TraningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Salary");

                    b.Navigation("Traning");
                });

            modelBuilder.Entity("HRM.Models.Position", b =>
                {
                    b.HasOne("HRM.Models.Benefits", "Benefits")
                        .WithMany()
                        .HasForeignKey("BenefitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benefits");
                });

            modelBuilder.Entity("HRM.Models.Recruitment", b =>
                {
                    b.HasOne("HRM.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRM.Models.Employee", b =>
                {
                    b.Navigation("Performances");
                });
#pragma warning restore 612, 618
        }
    }
}
